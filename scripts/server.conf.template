# OpenVPN 2.4.8 Server.conf Template File
# OpenSSL 1.1.1  11 Sep 2018, LZO 2.08
#
# Set OpenVPN major mode. By default, OpenVPN runs in point-to-point mode (“p2p”).
# OpenVPN 2.0 introduces a new mode (“server”) which implements a multi-client server capability.
mode server

#Enable TLS and assume server role during TLS handshake. OpenVPN is designed as a peer-to-peer application.
tls-server

#If client-to-client is enabled, the VPN server forwards client-to-client packets internally
#without sending them to the IP layer of the host (i.e. to the kernel). The host networking
#stack does not see those packets at all.
#client-to-client

# From Applied Crypto Hardening (3.2.3. Recommended cipher suites)
# To have a shared cipher with iOS 9 we need TLS-DHE-RSA-WITH-AES-256-GCM-SHA384 (no ECDHE)
tls-cipher TLS-ECDHE-RSA-WITH-AES-256-GCM-SHA384
auth SHA512

# Make sure we only use TLS 1.2
tls-version-min 1.2

# Set up CRL (used for revoking client certificates)
crl-verify crl.pem

# Make the replay window slightly larger due to mobile clients
#replay-window 256 60

# IP/hostname to bind to
# Not needed if you only have one network interface, or if you don’t mind binding to all of them.
#local ${VPN_PRIVATE_IP}

## default openvpn port 1194
port ${VPN_PORT}

#PROTOCOL UDP/TCP  - Can Designate either Ipv4/Ipv6 ie udp4,udp6 
proto ${VPN_PROTOCOL}4

# Tunnel
dev tun

# Certificates and encryption
ca ca.crt
cert ${VPN_HOST}.crt
# This file should be kept secret
key ${VPN_HOST}.key
# DH Key Size 4096
dh dh4096.pem
# Shared secret among server and clients
tls-auth ta.key 0

#DEPRECATED This option (comp-lzo) will be removed in a future OpenVPN x2.5 release. Use the newer –compress
#Enable a compression algorithm
#The algorithm parameter may be "lzo", "lz4", or empty. LZO and LZ4 are different compression
#algorithms, with LZ4 generally offering the best performance with least CPU usage.
#For backwards compatibility with OpenVPN versions before v2.4, use "lzo" (which is identical
#to the older option "--comp-lzo yes").
# Encrypt data channel with AES 256. Compress data with LZ4
cipher AES-256-CBC
${VPN_COMPRESSION}

#  Use a subnet rather than a point-to-point topology by configuring tun interface with local IP address and subnet.
topology subnet

# Tunnel configuration: Assign a subnet for VPN clients.
server ${VPN_FRONTEND_SUBNET} ${VPN_FRONTEND_NETMASK}

# Persist IP assignments to clients in case of server restart
ifconfig-pool-persist ipp.txt

# Force all traffic through VPN
#push "redirect-gateway def1 bypass-dhcp" #Bypass-DHCP
#push "redirect-gateway def1" #Don't Bypass-DHCP
#push "remote-gateway GATEWAY_IP”

# Push your DNS server IP
#push "dhcp-option DNS ${VPN_DNS1}"
#push "dhcp-option DNS ${VPN_DNS2}"
#push "dhcp-option DOMAIN ${VPN_DOMAIN}”

# Set appropriate timeouts (check the man page)
keepalive 10 120

# Drop privileges after setting up (be sure to create the user first)
user nobody    #Debian based user - Different with CentOS/RHEL
group nogroup  #Debian Based group - Different with CentOS/RHEL

# Persist keys and tunnels over `SIGUSR1` (“soft restarts”)
# Useful to use when dropping privileges
persist-key
persist-tun

# Keep current status on this file.
status /var/log/openvpn/openvpn-status.log
log /var/log/openvpn/openvpn-server.log

# Log verbosity (logs can be read with journalctl)
verb 3
